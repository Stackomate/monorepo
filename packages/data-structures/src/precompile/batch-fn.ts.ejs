import { Batcher } from "./batcher";

export type Fn<A, B> = (a: A) => B;
export type FnBatcherArg<T, A> = (a: Batcher<T>) => A;

/* Must edit batch function inside batcher too */
interface Batch {
<%- getBatchPipeableTypings() -%>
}

/* TODO: call apply method if possible */
export const batch: Batch = (b: any, ...ops: any) => {
    let lastResult = b;
    for (let op of ops) {
        lastResult = op(lastResult);
    }
    return lastResult;
}

interface Apply {
<%- getApplyPipeableTypings() -%>
}
export const apply: Apply = (item: any, ...ops: any) => {
    let lastResult = item;
    for (let op of ops) {
        lastResult = op(lastResult);
    }
    return lastResult;
}