
   
name: Release
on:
  push:
    branches:
      - main

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          # Semantic Release uses a separate Github Token for publishing
          # See: https://github.com/semantic-release/semantic-release/blob/master/docs/recipes/github-actions.md#pushing-packagejson-changes-to-a-master-branch
          persist-credentials: false

      - uses: mstachniuk/ci-skip@v1
        # Cancels the pipeline early if [ci skip] is detected in the commit header.
        # For example, changelog commits from the Semantic Release toolchain will generate a commit with the [ci skip] in the header.
        with:
          fail-fast: true

      - name: Configure CI Github User
        run: |
          git config --global user.name 'Rafael Calpena Rodrigues'
          git config --global user.email 'rafael.calpena@gmail.com'
          git remote set-url origin https://$GITHUB_ACTOR:$GH_TOKEN@github.com/Stackomate/monorepo
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org
          always-auth: true

      - name: Install dependencies
        # Skip post-install scripts here, as a malicious
        # script could steal NODE_AUTH_TOKEN.
        run: npm -v && npm i lerna -g && npm ci --ignore-scripts --no-optional
        # env:
        #   # Use the read-only access NPM token here
        #   NODE_AUTH_TOKEN: ${{secrets.NPM_INSTALL_TOKEN}}

      - name: Build
        # `npm rebuild` will run all those post-install scripts for us.
        run: npm rebuild
        
      - name: Lerna Bootstrap
        # Skip post-install scripts here too     
        run: lerna bootstrap -- --ignore-scripts --no-optional
        # env:
        #   # Use the read-only access NPM token here
        #   NODE_AUTH_TOKEN: ${{secrets.NPM_INSTALL_TOKEN}}        

      - name: Rebuild Packages
        # Use lerna to exec the rebuild command in each of the packages 
        # --stream will interleave output from multiple packages
        run: lerna exec --stream -- npm rebuild

      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
              echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> .npmrc
              lerna version
              lerna publish from-git --no-verify-access